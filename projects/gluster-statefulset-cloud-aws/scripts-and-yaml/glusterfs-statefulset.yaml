---
kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: gluster
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
  zone: us-east-1d
---
apiVersion: v1
kind: Service
metadata:
  name: glusterfs
  labels:
    app: glusterfs
    glusterfs: service
spec:
  ports:
  - port: 24007
    name: glusterd
  - port: 24008
    name: management
  clusterIP: None
  selector:
    app: glusterfs
---
kind: StatefulSet
apiVersion: apps/v1beta2  # change this to v1beta1 for OCP 3.6
metadata:
  name: glusterfs
  labels:
    glusterfs: statefulset
  annotations:
    description: GlusterFS StatefulSet
    tags: glusterfs
spec:
  selector:
    matchLabels:
      app: glusterfs
  serviceName: glusterfs
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: glusterfs
      labels:
        app: glusterfs
        glusterfs: pod
        glusterfs-node: pod
    spec:
      hostNetwork: false
      containers:
      - image: gluster/gluster-centos:latest
        imagePullPolicy: IfNotPresent
        name: glusterfs
        lifecycle:
          postStart:
            exec:
              command: 
              - "chmod"
              - "+x"
              - "/usr/share/bin/gluster-post.sh"
#              command:
#              - "chmod"
#              - "+x"
#              - "/usr/share/bin/gluster-stop.sh"
#          preStop:
#            exec:
#              command: 
#              - "rm"
#              - "-rf"
#              - "$LOG_NAME"
        ports:
        - containerPort: 24007
        - containerPort: 24008
        env:
        - name: BASE_NAME
          value: "glusterfs"
        - name: SERVICE_NAME                  # important that this matches the actual service that corresponds to this set
          value: "glusterfs"
        - name: NAMESPACE                     # maybe this can be inferred in someway
          value: "default"
        - name: ORIGINAL_PEER_COUNT
          value: "3"
        - name: DNS_DOMAIN
          value: "svc.cluster.local"
        - name: MOUNT_BASE                       # MOUNT_BASE + VOLUME_BASE should match volumeMounts mountPath minus the numeric identifier i.e. glusterfs-data0, 1, 2, 3 etc...
          value: "/mnt/glusterfs-volume/"
        - name: VOLUME_BASE                      # MOUNT_BASE + VOLUME_BASE should match volumeMounts mountPath minus the numeric identifier i.e. glusterfs-data0, 1, 2, 3 etc...
          value: "glusterfs-data"
        - name: FUSE_BASE                        # FUSE_BASE is the base dirs where our fuse mount will live FUSE_BASE + VOLUME_BASE
          value: "/mnt/glusterfs-storage/"
        - name: VOLUME_COUNT                     # num of volumes to manage if CREATE_VOLUMES is turned on, This should always match the num of dynamic glusterfs-dataX volumes
          value: "1"
        - name: CREATE_VOLUMES                   # boolean controlling whether volumes should be managed
          value: "1"
        - name: SET_IDENTIFIER                   # our application identifier used by our management script
          value: "app=glusterfs"
        - name: LOG_NAME                         # our mgmt script log dir and name, accessible by hostPath volumeMount below
          value: "/usr/share/bin/glusterfs.log"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
        volumeMounts:
        - name: glusterfs-state
          mountPath: "/glusterfs"
        - name: glusterd-state
          mountPath: "/var/lib/glusterd"
        - name: glusterfs-cgroup
          mountPath: "/sys/fs/cgroup"
          readOnly: true
        - name: glusterfs-ssl
          mountPath: "/etc/ssl"
          readOnly: true
        - name: gluster-scripts
          mountPath: "/usr/share/bin"
        - name: glusterfs-data0
          mountPath: "/mnt/glusterfs-volume/glusterfs-data0"
        securityContext:
          capabilities: {}
          privileged: true
        readinessProbe:
          timeoutSeconds: 3
          initialDelaySeconds: 10
          tcpSocket:
            port: 24007
          periodSeconds: 15
          successThreshold: 1
          failureThreshold: 12
        livenessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "source ./usr/share/bin/gluster-post.sh"
          initialDelaySeconds: 180
          periodSeconds: 60
#        livenessProbe:
#          timeoutSeconds: 3
#          initialDelaySeconds: 10
#          tcpSocket:
#            port: 24007
#          periodSeconds: 15
#          successThreshold: 1
#          failureThreshold: 12
      volumes:
      - name: glusterfs-cgroup
        hostPath:
          path: "/sys/fs/cgroup"
      - name: glusterfs-ssl
        hostPath:
          path: "/etc/ssl"
      - name: gluster-scripts
        hostPath:
          path: "/usr/share/gluster-scripts"
#      - name: gluster-scripts
#        persistentVolumeClaim:
#          claimName: gluster-scripts
  volumeClaimTemplates:
  - metadata:
      name: glusterfs-state
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: gluster
      resources:
        requests:
          storage: 5Gi
  - metadata:
      name: glusterd-state
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: gluster
      resources:
        requests:
          storage: 20Gi
  - metadata:
      name: glusterfs-data0
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: gluster
      resources:
        requests:
          storage: 80Gi
